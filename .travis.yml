# Travis CI (MIT License) configuration file
# @link https://travis-ci.org/

# Use new container based environment
sudo: false

# Declare project language.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

# Declare versions of PHP to use. Use one decimal max.
php:
  - 5.2
  - 5.6
  - hhvm

matrix:
  allow_failures:
    - php: hhvm

before_script:
  - export PHPCS_DIR=/tmp/phpcs
  - export WPCS_DIR=/tmp/wpcs
  # Install CodeSniffer for WordPress Coding Standards checks.
  # 2.3.1 breaks PHP 5.2 on Travis due to use of Phar class.
  - git clone -b 2.3.0 --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git $PHPCS_DIR
  # Install WordPress Coding Standards.
  - git clone -b master --depth 1 https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git $WPCS_DIR
  # Set install path for WordPress Coding Standards.
  # @link https://github.com/squizlabs/PHP_CodeSniffer/blob/4237c2fc98cc838730b76ee9cee316f99286a2a7/CodeSniffer.php#L1941
  - $PHPCS_DIR/scripts/phpcs --config-set installed_paths $WPCS_DIR
  # After CodeSniffer install you should refresh your path.
  - phpenv rehash

# Run test script commands.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
  # Search for PHP syntax errors.
  - find . \( -name '*.php' \) -exec php -lf {} \;
  # WordPress Coding Standards
  # @link https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards
  # @link https://github.com/squizlabs/PHP_CodeSniffer
  # All of the usual config flags are held in phpcs.xml
  - $PHPCS_DIR/scripts/phpcs

notifications:
  email: false
